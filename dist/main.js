(()=>{"use strict";const e=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],t=new Set(["Clouds","Drizzle","Rain","Snow","Sunny","Thunderstorm"]),n=e=>e.charAt(0).toUpperCase()+e.slice(1),o=o=>{const r=o.list[0];document.querySelector("body").style.backgroundImage=`url('./resources/img/${t.has(r.weather.name)?r.weather.name:"Atmosphere"}.png')`,document.querySelector("h1").textContent=n(r.weather.description),document.querySelector("h2").textContent=o.name;const a=document.querySelector(".main_temp");a.textContent=r.temp,a.innerHTML+="&deg;C";const c=document.querySelector(".secondary_temp_data");c.textContent=r.feelsLike,c.innerHTML+="&deg;C",document.querySelector(".secondary_wind_data").textContent=r.windSpeed+"km/h",document.querySelector(".secondary_humidity_data").textContent=r.humidity+"%";for(let t=1;t<=4;t++){const r=o.list[t],a=document.querySelector(".week-info_day__"+t),c=a.querySelector(".week-info_day_label"),d=a.querySelector(".week-info_day_weather"),s=a.querySelector(".week-info_day_temperature"),i=a.querySelector(".weather-icon");c.textContent=e[r.date.getDay()],d.textContent=n(r.weather.description),s.textContent=r.temp,s.innerHTML+="&deg;C",i.src=`http://openweathermap.org/img/wn/${r.weather.icon}@2x.png`}},r=e=>{"Failed to fetch"==e.message?(document.querySelector(".content")?.classList.add("disabled"),document.querySelector(".error_no-page")?.classList.add("disabled"),document.querySelector(".error_no-connection")?.classList.remove("disabled")):(console.log(e),document.querySelector(".content")?.classList.add("disabled"),document.querySelector(".error_no-connection")?.classList.add("disabled"),document.querySelector(".error_no-page")?.classList.remove("disabled"))},a=e=>({date:new Date(e.dt_txt),temp:e.main.temp,windSpeed:e.wind.speed,humidity:e.main.humidity,feelsLike:e.main.feels_like,weather:{name:"Clear"===e.weather[0].main?"Sunny":e.weather[0].main,description:e.weather[0].description,icon:e.weather[0].icon}}),c=async e=>{const t=await async function(e){const t=await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${e}&lang=en&units=metric&appid=76c4931477289c3dcd1e379572dd98e6`,{mode:"cors"}),n=await t.json();if(200!==t.status)throw new Error("404");return n}(e);return{name:t.city.name,list:[a(t.list[0]),a(t.list[8]),a(t.list[16]),a(t.list[24]),a(t.list[32])]}},d=document.querySelector(".search");c("Moscow").then((e=>{console.log(e),document.querySelector(".error")?.classList.add("disabled"),document.querySelector(".disabled")?.classList.remove("disabled"),o(e,document.querySelector(".content"))})).catch((e=>r(e))),d.addEventListener("submit",(e=>{const t=d.querySelector("input");c(t.value).then((e=>{console.log(e),document.querySelector(".error")?.classList.add("disabled"),document.querySelector(".disabled")?.classList.remove("disabled"),o(e,document.querySelector(".content")),t.value=""})).catch((e=>r(e))),e.preventDefault()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,